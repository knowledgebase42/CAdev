% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_semantic_hooks.R, R/02_skeleton_hooks.R
\name{semantic_hook}
\alias{semantic_hook}
\title{geyser hook}
\usage{
semantic_hook(path, package_name, ...)

semantic_hook(path, package_name, ...)
}
\arguments{
\item{path}{Name of the folder to create the package in.
This will also be used as the package name.}

\item{package_name}{Package name to use. By default, {golem} uses
\code{basename(path)}. If \code{path == '.'} & \code{package_name} is
not explicitly set, then \code{basename(getwd())} will be used.}

\item{...}{Arguments passed from \code{create_golem()}, unused in the default
function.}
}
\value{
Used for side effect

Used for side effect
}
\description{
This hook creates an Old Faithful Geyser Data
application. It is mainly inteded as a simple example of how to
use the `project_hook` argument of `create_golem()`.

This hook creates an Old Faithful Geyser Data
application. It is mainly inteded as a simple example of how to
use the `project_hook` argument of `create_golem()`.
}
\examples{
if (FALSE){
  pth <- tempfile(pattern = "geyser")
  golem::create_golem(pth, project_hook = geyser_hook)
  readLines(file.path(pth, "R/app_ui.R"))
  unlink(pth, recursive = TRUE)
}
if (FALSE){
  pth <- tempfile(pattern = "geyser")
  golem::create_golem(pth, project_hook = geyser_hook)
  readLines(file.path(pth, "R/app_ui.R"))
  unlink(pth, recursive = TRUE)
}
}
